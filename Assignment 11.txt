#### HTMl code below this line!!!!
<fieldset>
  <legend>Assignment 11: Landon Simmons COP3530</legend>
  <table>
    <tr>
      <td>
        Enter an number:
        <input type='text' id='intValue' value='1' />
      </td>
      <td>
        <button id='button1' onclick="checkNode();" value="2">
          Add Value
        </button>
      </td>
      <td>
        <button id='button2' onclick="createNode();" value="2">
          Create List
        </button>
      </td>
    </tr>
  </table>
</fieldset>
<table>
  <tr>
    <div id='output'></div>
  </tr>
  <tr>
    <div id='output1'></div>
  </tr>
</table>
#### Javascript code below this line!!!!!

function checkNode(_content) {
	var arrayValues = ["0.00", ".04", ".11", ".6", ".87", ".95", "1.00"];
	//pulling values from the user
  var c = document.getElementById("intValue").value;
  //testing for fraction and then pulling changing the value of the parse function
  var test = c.includes(".")
  if (test == true){
  	c = parseFloat(document.getElementById("intValue").value);
  }
  if (test != true){
  	c = parseInt(document.getElementById("intValue").value);
  }
  //passing the users value to the content portion of the node 
  var remainder = 0;
  var base = "";
  var next = "";
  var node = arrayValues;
  var counter = 0;
  
  while (counter < arrayValues.length) {
  	//the closest number in between -1 and 0 will be the base node
    //after the base node is established the equation is relatively easy to setup
  	if (counter - c > -1 && counter - c < 0){
      base = arrayValues[counter];
      remainder = c - counter;
      next = arrayValues[counter + 1 ];
      var answer = parseFloat(base) + remainder * (parseFloat(next) - parseFloat(base));
      answer = answer.toFixed(3);
			document.getElementById("output1").innerHTML = "Answer " + answer + "<br>" + "<br>" + "<br>";
      return this;
  	}
    if (counter == c){
    	var answer = arrayValues[counter];
      document.getElementById("output1").innerHTML = "Answer: " + answer + "<br>" + "<br>" + "<br>";
      return this;
    }
    counter++;
  }
}
                                         
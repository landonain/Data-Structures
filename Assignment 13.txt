!!!!! HTML Code below this line !!!!!!


Assignment 13: Implementing a Trie for spell checking - Landon Simmons <br/><br/>
<input type="textbox" id="input" onkeyup="getInput();" />
<br/><br/>
<input type="button" value="Add Word" onclick="AddToTRIE()" />
<input type="button" value="Check Spelling" onclick="checkInput()" />
<div id="outputUser"></div>
<div id="output"></div>
<div id="output1"></div>
<div id="output2"></div>

!!!!! JS Code below this line !!!!!!

function checkInput() {
  //takes user input and sends it be check for spell checking
  var i = document.getElementById('input').value;
  document.getElementById('outputUser').innerHTML = "User input: " + i + "<br/><br/>";
  var trieArray = myTrie.print();
  var resultHolder = [];
  var index = 0;
  while (index < trieArray.length) {
    var test = i;
    var testingResult = trieArray[index].includes(test);
 		//accounting for case sensitive results
    var testingResultLower = trieArray[index].toLowerCase().includes(test);
    if (testingResult == true || testingResultLower == true) {
      document.getElementById('output2').innerHTML = "Result is true word is in Trie";
      return;
    }
    index++;
  }
  document.getElementById('output2').innerHTML = "Result is false - check your spelling";
}



function getInput() {
  //takes user input and sends it be check for spell checking
  debugger;
  document.getElementById('output2').innerHTML = "";
  var i = document.getElementById('input').value;
  document.getElementById('outputUser').innerHTML = "User input: " + i + "<br/><br/>";
  var trieArray = myTrie.print();
  var resultHolder = [];
  var index = 0;
  while (index < trieArray.length) {
    var test = i;
    var testingResult = trieArray[index].includes(test);
 		//accounting for case sensitive results
    var testingResultLower = trieArray[index].toLowerCase().includes(test);
    if (testingResult == true || testingResultLower == true) {
      resultHolder += trieArray[index] + "<br/>";
    }
    index++;
  }
  document.getElementById('output').innerHTML = resultHolder;
}

let Node = function() {
  this.keys = new Map();
  this.end = false;
  this.setEnd = function() {
    this.end = true;
  };
  this.isEnd = function() {
    return this.end;
  };
};

let Trie = function() {

  this.root = new Node();

  this.add = function(input, node = this.root) {
    if (input.length == 0) {
      node.setEnd();
      return;
    } else if (!node.keys.has(input[0])) {
      node.keys.set(input[0], new Node());
      return this.add(input.substr(1), node.keys.get(input[0]));
    } else {
      return this.add(input.substr(1), node.keys.get(input[0]));
    };
  };

  this.isWord = function(word) {
    let node = this.root;
    while (word.length > 1) {
      if (!node.keys.has(word[0])) {
        return false;
      } else {
        node = node.keys.get(word[0]);
        word = word.substr(1);
      };
    };
    return (node.keys.has(word) && node.keys.get(word).isEnd()) ?
      true : false;
  };

  this.print = function() {
    let words = new Array();
    let search = function(node, string) {
      if (node.keys.size != 0) {
        for (let letter of node.keys.keys()) {
          search(node.keys.get(letter), string.concat(letter));
        };
        if (node.isEnd()) {
          words.push(string);
        };
      } else {
        string.length > 0 ? words.push(string) : undefined;
        return;
      };
    };
    search(this.root, new String());
    return words.length > 0 ? words : mo;
  };

};

function AddToTRIE(word) {
  var c = document.getElementById("input").value;
  var array = myTrie.print()

  var test = array.includes(c);
  if (test == false) {
    myTrie.add(c);
    document.getElementById('output1').innerHTML = "<br/> Added " + c + " to Trie";
    var billy = myTrie.print();
    billy = billy.join(" <br/>");
    document.getElementById('output').innerHTML = billy;
    return;
  }
  document.getElementById('output1').innerHTML = "<br/> Element " + c + " is already in Trie";
}
myTrie = new Trie();
myTrie.add('I');
myTrie.add('in');
myTrie.add('into');
myTrie.add('inlet');
myTrie.add('inn');
myTrie.add('inner');
myTrie.add('innate');
myTrie.add('ink');
